name: hello-world application POC
on:
  push:
    branches:
      - main
env:
RESOURCE_GROUP: replace-with-your-rg-name
WEBAPP_NAME: hello-world
SLOT_NAME: staging # Create a slot on your web app called "staging"
DOTNET_VERSION: "6.0.x"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v1

      - name: Retrieve cached node module directory -if present
        uses: actions/cache@v2
        id: hello-world-cache
        with:
          path: node modules
          key: node-modules-${{ runner.os }}-hello-world-build-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies (if the cached directory was not found)
        if: steps.hello-world-cache.outputs.cache-hit != 'true'

      - name: Set up .Net
        uses: actions/setup-java@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Set up dependency caching for net
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${( runner.os })-nuget-hello-world-build-${{ hashfiles('**/*.csproj') }}
          restore_keys: |
            ${{ runner.os }}-nuget-hello-world-build-

      - name: Build hello-world
        run: dotnet build hello-world.Function -c Release

      - name: Publish hello-world
        run: dotnet publish hello-world.Function -c Release

      - name: Test hello-world
        run: dotnet test hello-world.Function -c Release

      - name: Archive function artifacts for hello-world app
        uses: actions/upload-artifact@v2
        with:
          name: hello-world-function-artifact
          path: /home/runner/work/hello-world/hello-world/hello-world.Function
